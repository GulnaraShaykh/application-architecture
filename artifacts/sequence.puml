@startuml
actor User as "Пользователь"
participant MobileApp as "Мобильное Приложение\n(Mobile App)"
participant WebApp as "Веб Приложение\n(Web App)"
participant ExternalAPIGateway as "Внешний API Gateway\n(External API Gateway)"
participant InternalAPIGateway as "Внутренний API Gateway\n(Internal API Gateway)"
participant AuthService as "Сервис Аутентификации\n(Auth Service)"
participant UserManagement as "Управление Пользователями\n(User Management)"
participant WorkoutManagement as "Управление Тренировками\n(Workout Management)"
participant NotificationService as "Сервис Уведомлений\n(Notification Service)"
participant Inventory as "Управление Инвентарем\n(Inventory Management)"
participant PaymentService as "Сервис Платежей\n(Payment Service)"
participant AuthDatabase as "База Данных Аутентификации\n(Auth Database)"
participant UserDatabase as "База Данных Пользователей\n(User Database)"
participant WorkoutDatabase as "База Данных Тренировок\n(Workout Database)"
participant NotificationDatabase as "База Данных Уведомлений\n(Notification Database)"
participant InventoryDatabase as "База Данных Инвентаря\n(Inventory Database)"
participant PaymentDatabase as "База Данных Платежей\n(Payment Database)"
participant MonitoringService as "Система Мониторинга\n(Monitoring Service)"
participant Grafana as "Grafana"
participant Prometheus as "Prometheus"

== Запрос на аутентификацию ==
User -> MobileApp : 1. Запрос на аутентификацию
User -> WebApp : 2. Запрос на аутентификацию

MobileApp -> ExternalAPIGateway : 3. Аутентификация пользователя
WebApp -> ExternalAPIGateway : 4. Аутентификация пользователя

ExternalAPIGateway -> AuthService : 5. Проверка учетных данных
AuthService -> AuthDatabase : 6. Запрос на проверку учетных данных
AuthDatabase --> AuthService : 7. Ответ с результатами проверки
AuthService --> ExternalAPIGateway : 8. Результаты проверки
ExternalAPIGateway --> MobileApp : 9. Ответ на аутентификацию
ExternalAPIGateway --> WebApp : 10. Ответ на аутентификацию

== Запрос на тренировку ==
User -> MobileApp : 11. Запрос на тренировку
User -> WebApp : 12. Запрос на тренировку

MobileApp -> ExternalAPIGateway : 13. Запрос на тренировки
WebApp -> ExternalAPIGateway : 14. Запрос на тренировки

ExternalAPIGateway -> InternalAPIGateway : 15. Пересылка запроса на тренировки
InternalAPIGateway -> WorkoutManagement : 16. Получение доступных тренировок
WorkoutManagement -> WorkoutDatabase : 17. Запрос на данные тренировок
WorkoutDatabase --> WorkoutManagement : 18. Ответ с данными тренировок
WorkoutManagement --> InternalAPIGateway : 19. Данные тренировок
InternalAPIGateway --> ExternalAPIGateway : 20. Ответ с данными тренировок
ExternalAPIGateway --> MobileApp : 21. Ответ с данными тренировок
ExternalAPIGateway --> WebApp : 22. Ответ с данными тренировок

== Запрос на уведомления ==
User -> MobileApp : 23. Запрос на уведомления
User -> WebApp : 24. Запрос на уведомления

MobileApp -> ExternalAPIGateway : 25. Запрос на уведомления
WebApp -> ExternalAPIGateway : 26. Запрос на уведомления

ExternalAPIGateway -> NotificationService : 27. Получение уведомлений
NotificationService -> NotificationDatabase : 28. Запрос на уведомления
NotificationDatabase --> NotificationService : 29. Ответ с уведомлениями
NotificationService --> ExternalAPIGateway : 30. Уведомления
ExternalAPIGateway --> MobileApp : 31. Уведомления
ExternalAPIGateway --> WebApp : 32. Уведомления

== Запрос на инвентарь ==
User -> MobileApp : 33. Запрос на инвентарь
User -> WebApp : 34. Запрос на инвентарь

MobileApp -> ExternalAPIGateway : 35. Запрос на инвентарь
WebApp -> ExternalAPIGateway : 36. Запрос на инвентарь

ExternalAPIGateway -> InternalAPIGateway : 37. Запрос на данные инвентаря
InternalAPIGateway -> Inventory : 38. Запрос на инвентарь
Inventory -> InventoryDatabase : 39. Запрос на инвентарь
InventoryDatabase --> Inventory : 40. Данные инвентаря
Inventory --> InternalAPIGateway : 41. Данные инвентаря
InternalAPIGateway --> ExternalAPIGateway : 42. Данные инвентаря
ExternalAPIGateway --> MobileApp : 43. Данные инвентаря
ExternalAPIGateway --> WebApp : 44. Данные инвентаря

== Запрос на оплату ==
User -> MobileApp : 45. Запрос на оплату
User -> WebApp : 46. Запрос на оплату

MobileApp -> ExternalAPIGateway : 47. Запрос на платеж
WebApp -> ExternalAPIGateway : 48. Запрос на платеж

ExternalAPIGateway -> PaymentService : 49. Обработка платежа
PaymentService -> PaymentDatabase : 50. Запрос на платежные данные
PaymentDatabase --> PaymentService : 51. Ответ с данными платежа
PaymentService --> ExternalAPIGateway : 52. Результат обработки платежа
ExternalAPIGateway --> MobileApp : 53. Результат обработки платежа
ExternalAPIGateway --> WebApp : 54. Результат обработки платежа

== Интеграция с устройствами IoT ==
User -> MobileApp : 55. Подключение устройства IoT
User -> WebApp : 56. Подключение устройства IoT

MobileApp -> ExternalAPIGateway : 57. Запрос на подключение устройства
WebApp -> ExternalAPIGateway : 58. Запрос на подключение устройства

ExternalAPIGateway -> InternalAPIGateway : 59. Пересылка запроса на инвентарь
InternalAPIGateway -> Inventory : 60. Обработка запроса на устройство IoT
Inventory -> InventoryDatabase : 61. Запрос на данные устройства
InventoryDatabase --> Inventory : 62. Данные устройства
Inventory --> InternalAPIGateway : 63. Данные устройства
InternalAPIGateway --> ExternalAPIGateway : 64. Ответ с данными устройства
ExternalAPIGateway --> MobileApp : 65. Данные устройства
ExternalAPIGateway --> WebApp : 66. Данные устройства

== Мониторинг системы ==
MonitoringService -> Prometheus : 67. Сбор метрик системы
Prometheus -> Grafana : 68. Визуализация метрик
@enduml
